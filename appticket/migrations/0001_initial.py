# Generated by Django 5.1.1 on 2025-06-01 14:03

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Administrateur",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nom", models.CharField(max_length=100)),
                ("prenom", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Administrateur",
                "verbose_name_plural": "Administrateurs",
                "db_table": "administrateurs",
            },
        ),
        migrations.CreateModel(
            name="Agence",
            fields=[
                (
                    "id_agence",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nom_agence", models.CharField(max_length=200)),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=8,
                        help_text="Latitude de l'agence",
                        max_digits=10,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        decimal_places=8,
                        help_text="Longitude de l'agence",
                        max_digits=11,
                    ),
                ),
                ("adresse", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Agence",
                "verbose_name_plural": "Agences",
                "db_table": "agences",
            },
        ),
        migrations.CreateModel(
            name="Agent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nom", models.CharField(max_length=100)),
                ("prenom", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Agent",
                "verbose_name_plural": "Agents",
                "db_table": "agents",
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        decimal_places=8,
                        help_text="Latitude de la position du client",
                        max_digits=10,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        decimal_places=8,
                        help_text="Longitude de la position du client",
                        max_digits=11,
                    ),
                ),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Client",
                "verbose_name_plural": "Clients",
                "db_table": "clients",
            },
        ),
        migrations.CreateModel(
            name="ConfigurationDistribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False, help_text="Distribution automatique activée"
                    ),
                ),
                (
                    "intervalle_minutes",
                    models.IntegerField(
                        default=5,
                        help_text="Intervalle en minutes entre les appels automatiques",
                    ),
                ),
                ("derniere_execution", models.DateTimeField(blank=True, null=True)),
                ("date_creation", models.DateTimeField(auto_now_add=True)),
                ("date_modification", models.DateTimeField(auto_now=True)),
                (
                    "agence",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configuration_distribution",
                        to="appticket.agence",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration Distribution",
                "verbose_name_plural": "Configurations Distribution",
                "db_table": "configuration_distribution",
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id_ticket",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "numero_ticket",
                    models.CharField(
                        help_text="Numéro de ticket affiché au client",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "type_reservation",
                    models.CharField(
                        choices=[
                            ("normal", "Normal"),
                            ("prioritaire", "Prioritaire"),
                            ("handicape", "Handicapé"),
                            ("personne_agee", "Personne âgée"),
                        ],
                        default="normal",
                        max_length=20,
                    ),
                ),
                ("date_emission", models.DateTimeField(auto_now_add=True)),
                (
                    "date_appel",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date d'appel du ticket par l'agent",
                        null=True,
                    ),
                ),
                (
                    "date_fin",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date de fin de traitement du ticket",
                        null=True,
                    ),
                ),
                (
                    "etat",
                    models.CharField(
                        choices=[
                            ("en_attente", "En attente"),
                            ("en_cours", "En cours"),
                            ("termine", "Terminé"),
                            ("annule", "Annulé"),
                            ("expire", "Expiré"),
                        ],
                        default="en_attente",
                        max_length=20,
                    ),
                ),
                (
                    "agence",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to="appticket.agence",
                    ),
                ),
                (
                    "agent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tickets",
                        to="appticket.agent",
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to="appticket.client",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ticket",
                "verbose_name_plural": "Tickets",
                "db_table": "tickets",
                "ordering": ["date_emission"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id_notification",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("message", models.TextField()),
                (
                    "type_notification",
                    models.CharField(
                        choices=[
                            ("appel", "Appel de ticket"),
                            ("information", "Information"),
                            ("rappel", "Rappel"),
                            ("annulation", "Annulation"),
                        ],
                        default="information",
                        max_length=20,
                    ),
                ),
                ("date_envoi", models.DateTimeField(auto_now_add=True)),
                ("date_lecture", models.DateTimeField(blank=True, null=True)),
                (
                    "statut",
                    models.CharField(
                        choices=[
                            ("envoye", "Envoyé"),
                            ("lu", "Lu"),
                            ("non_envoye", "Non envoyé"),
                        ],
                        default="envoye",
                        max_length=20,
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="appticket.ticket",
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "db_table": "notifications",
                "ordering": ["-date_envoi"],
            },
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["etat", "agence"], name="tickets_etat_36c9be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["date_emission"], name="tickets_date_em_05a277_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["numero_ticket"], name="tickets_numero__790bce_idx"
            ),
        ),
    ]
